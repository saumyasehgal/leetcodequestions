class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int low = 0, high = nums.size() - 1;
    
    while (low <= high) {
        int mid = low + (high - low)  / 2;  // Calculate mid index
        
        if (nums[mid] == target) {
            return mid;  // Target found, return index
        } else if (nums[mid] < target) {
            low = mid + 1;  // Move to the right half
        } else {
            high = mid - 1;  // Move to the left half
        }
    }
    
    // If target is not found, low will be the insertion position
    return low;
    }
};
